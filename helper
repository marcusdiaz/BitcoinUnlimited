Bitcoin Unlimited Daemon version v1.1.0.99-5e58845

Usage:
  bitcoind [options]                     Start Bitcoin Unlimited Daemon

Help options:

  -?
       This help message

  -version
       Print version and exit

  -help-debug
       Show all debugging options (usage: --help -help-debug)

Configuration location options:

  -conf=<file>
       Specify configuration file (default: bitcoin.conf)

  -datadir=<dir>
       Specify data directory

General options:

  -alertnotify=<cmd>
       Execute command when a relevant alert is received or we see a really
       long fork (%s in cmd is replaced by message)

  -blocknotify=<cmd>
       Execute command when the best block changes (%s in cmd is replaced by
       block hash)

  -checkblocks=<n>
       How many blocks to check at startup (default: 6, 0 = all)

  -checklevel=<n>
       How thorough the block verification of -checkblocks is (0-4, default: 3)

  -daemon
       Run in the background as a daemon and accept commands

  -dbcache=<n>
       Set database cache size in megabytes (4 to 16384, default: 300)

  -loadblock=<file>
       Imports blocks from external blk000??.dat file on startup

  -maxorphantx=<n>
       Keep at most <n> unconnectable transactions in memory (default: 2500)

  -maxmempool=<n>
       Keep the transaction memory pool below <n> megabytes (default: 300)

  -mempoolexpiry=<n>
       Do not keep transactions in the mempool longer than <n> hours (default:
       72)

  -orphanpoolexpiry=<n>
       Do not keep transactions in the orphanpool longer than <n> hours
       (default: 4)

  -par=<n>
       Set the number of script verification threads (-1 to 16, 0 = auto, <0 =
       leave that many cores free, default: 0)

  -parallel=<n>
       Turn Parallel Block Validation on or off (default: 1)

  -pid=<file>
       Specify pid file (default: bitcoind.pid)

  -prune=<n>
       Reduce storage requirements by pruning (deleting) old blocks. This mode
       is incompatible with -txindex and -rescan. Warning: Reverting
       this setting requires re-downloading the entire blockchain.
       (default: 0 = disable pruning blocks, >550 = target size in MiB
       to use for block files)

  -reindex
       Rebuild block chain index from current blk000??.dat files on startup

  -txindex
       Maintain a full transaction index, used by the getrawtransaction rpc
       call (default: 0)

Connection options:

  -addnode=<ip>
       Add a node to connect to and attempt to keep the connection open

  -banscore=<n>
       Threshold for disconnecting misbehaving peers (default: 100)

  -bantime=<n>
       Number of seconds to keep misbehaving peers from reconnecting (default:
       86400)

  -bind=<addr>
       Bind to given address and always listen on it. Use [host]:port notation
       for IPv6

  -bitnodes
       Query for peer addresses via Bitnodes API, if low on addresses (default:
       1 unless -connect)

  -blkretryinterval
       Time to wait before requesting a block from a different peer, in
       microseconds (default: 5000000)

  -connect=<ip>
       Connect only to the specified node(s)

  -connect-thinblock=<ip:port>
       Connect to a thinblock node(s). Blocks will only be downloaded from a
       thinblock peer.  If no connections are possible then regular
       blocks will then be downloaded form any other connected peers

  -discover
       Discover own IP addresses (default: 1 when listening and no -externalip
       or -proxy)

  -dns
       Allow DNS lookups for -addnode, -seednode and -connect (default: 1)

  -dnsseed
       Query for peer addresses via DNS lookup, if low on addresses (default: 1
       unless -connect)

  -externalip=<ip>
       Specify your own public address

  -forcebitnodes
       Always query for peer addresses via Bitnodes API (default: 0)

  -forcednsseed
       Always query for peer addresses via DNS lookup (default: 0)

  -listen
       Accept connections from outside (default: 1 if no -proxy or -connect)

  -listenonion
       Automatically create Tor hidden service (default: 1)

  -maxconnections=<n>
       Maintain at most <n> connections to peers (default: 125)

  -maxoutconnections=<n>
       Initiate at most <n> connections to peers (default: 12).  If this number
       is higher than --maxconnections, it will be reduced to
       --maxconnections

  -maxreceivebuffer=<n>
       Maximum per-connection receive buffer, <n>*1000 bytes (default: 5000)

  -maxsendbuffer=<n>
       Maximum per-connection send buffer, <n>*1000 bytes (default: 1000)

  -min-xthin-nodes=<n>
       Minimum number of xthin nodes to automatically find and connect
       (default: 8)

  -onion=<ip:port>
       Use separate SOCKS5 proxy to reach peers via Tor hidden services
       (default: -proxy)

  -onlynet=<net>
       Only connect to nodes in network <net> (ipv4, ipv6 or onion)

  -permitbaremultisig
       Relay non-P2SH multisig (default: 1)

  -peerbloomfilters
       Support filtering of blocks and transaction with bloom filters (default:
       1)

  -port=<port>
       Listen for connections on <port> (default: 8333 or testnet: 18333)

  -proxy=<ip:port>
       Connect through SOCKS5 proxy

  -proxyrandomize
       Randomize credentials for every proxy connection. This enables Tor
       stream isolation (default: 1)

  -seednode=<ip>
       Connect to a node to retrieve peer addresses, and disconnect

  -timeout=<n>
       Specify connection timeout in milliseconds (minimum: 1, default: 5000)

  -torcontrol=<ip>:<port>
       Tor control port to use if onion listening enabled (default:
       127.0.0.1:9051)

  -torpassword=<pass>
       Tor control port password (default: empty)

  -txretryinterval
       Time to wait before requesting a tx from a different peer, in
       microseconds (default: 5000000)

  -upnp
       Use UPnP to map the listening port (default: 0)

  -usednsseed=<host>
       Add a custom DNS seed to use.  If at least one custom DNS seed is set,
       the default DNS seeds will be ignored.

  -whitebind=<addr>
       Bind to given address and whitelist peers connecting to it. Use
       [host]:port notation for IPv6

  -whitelist=<netmask>
       Whitelist peers connecting from the given netmask or IP address. Can be
       specified multiple times. Whitelisted peers cannot be DoS banned
       and their transactions are always relayed, even if they are
       already in the mempool, useful e.g. for a gateway

  -whitelistrelay
       Accept relayed transactions received from whitelisted peers even when
       not relaying transactions (default: 1)

  -whitelistforcerelay
       Force relay of transactions from whitelisted peers even they violate
       local relay policy (default: 1)

  -maxuploadtarget=<n>
       Tries to keep outbound traffic under the given target (in MiB per 24h),
       0 = no limit (default: 0)

Wallet options:

  -disablewallet
       Do not load the wallet and disable wallet RPC calls

  -keypool=<n>
       Set key pool size to <n> (default: 100)

  -fallbackfee=<amt>
       A fee rate (in BTC/kB) that will be used when fee estimation has
       insufficient data (default: 0.0002)

  -mintxfee=<amt>
       Fees (in BTC/kB) smaller than this are considered zero fee for
       transaction creation (default: 0.00001)

  -paytxfee=<amt>
       Fee (in BTC/kB) to add to transactions you send (default: 0.00)

  -rescan
       Rescan the block chain for missing wallet transactions on startup

  -salvagewallet
       Attempt to recover private keys from a corrupt wallet.dat on startup

  -sendfreetransactions
       Send transactions as zero-fee transactions if possible (default: 0)

  -spendzeroconfchange
       Spend unconfirmed change when sending transactions (default: 1)

  -txconfirmtarget=<n>
       If paytxfee is not set, include enough fee so transactions begin
       confirmation on average within n blocks (default: 2)

  -maxtxfee=<amt>
       Maximum total fees (in BTC) to use in a single wallet transaction;
       setting this too low may abort large transactions (default: 0.10)

  -upgradewallet
       Upgrade wallet to latest format on startup

  -wallet=<file>
       Specify wallet file (within data directory) (default: wallet.dat)

  -walletbroadcast
       Make the wallet broadcast transactions (default: 1)

  -walletnotify=<cmd>
       Execute command when a wallet transaction changes (%s in cmd is replaced
       by TxID)

  -zapwallettxes=<mode>
       Delete all wallet transactions and only recover those parts of the
       blockchain through -rescan on startup (1 = keep tx meta data e.g.
       account owner and payment request information, 2 = drop tx meta
       data)

ZeroMQ notification options:

  -zmqpubhashblock=<address>
       Enable publish hash block in <address>

  -zmqpubhashtx=<address>
       Enable publish hash transaction in <address>

  -zmqpubrawblock=<address>
       Enable publish raw block in <address>

  -zmqpubrawtx=<address>
       Enable publish raw transaction in <address>

Debugging/Testing options:

  -uacomment=<cmt>
       Append comment to the user agent string

  -debug=<category>
       Output debugging information (default: 0, supplying <category> is
       optional). If <category> is not supplied or if <category> = 1,
       output all debugging information.<category> can be: addrman,
       alert, bench, coindb, db, lock, rand, rpc, selectcoins, mempool,
       mempoolrej, net, proxy, prune, http, libevent, tor, zmq, thin,
       NWM.

  -flextrans
       Accept and relay transactions of version 4

  -ft-strict
       On incoming FlexTrans transactions reject tx that have not specified
       tokens. default: false

  -gen
       Generate coins (default: 0)

  -genproclimit=<n>
       Set the number of threads for coin generation if enabled (-1 = all
       cores, default: 1)

  -gencoinbase=<pubkey>
       When generating coins a coinbase has to be provided in the form of a
       public key

  -logips
       Include IP addresses in debug output (default: 1)

  -logtimestamps
       Prepend debug output with timestamp (default: 1)

  -printtoconsole
       Send trace/debug info to console instead of debug.log file

  -shrinkdebugfile
       Shrink debug.log file on client startup (default: 1 when no -debug)

Chain selection options:

  -chain_nol
       Use the no-limit blockchain

  -testnet
       Use the test chain

Node relay options:

  -bytespersigop=<n>
       Minimum bytes per sigop in transactions we relay and mine (default: 20)

  -datacarrier
       Relay and mine data carrier transactions (default: 1)

  -datacarriersize=<n>
       Maximum size of data in data carrier transactions we relay and mine
       (default: 83)

  -excessiveacceptdepth=<n>
       Excessive blocks are accepted if this many blocks are mined on top of
       them (default: 12)

  -excessiveblocksize=<n>
       Blocks above this size in bytes are considered excessive.  (default:
       16000000)

  -expeditedblock=<host>
       Request expedited blocks from this host whenever we are connected to it

  -maxexpeditedblockrecipients=<n>
       The maximum number of nodes this node will forward expedited blocks to

  -maxexpeditedtxrecipients=<n>
       The maximum number of nodes this node will forward expedited
       transactions to

  -maxlimitertxfee=<amt>
       Fees (in satoshi/byte) larger than this are always relayed (default:
       3.000)

  -minlimitertxfee=<amt>
       Fees (in satoshi/byte) smaller than this are considered zero fee and
       subject to -limitfreerelay (default: 0.000)

  -minrelaytxfee=<amt>
       Fees (in BTC/kB) smaller than this are considered zero fee for relaying,
       mining and transaction creation (default: 0.00001)

  -receiveavg-<n>
       The average rate that data can be received in kB/s (default:
       9223372036854775807)

  -receiveburst=<n>
       The maximum rate that data can be received in kB/s.  If there has been a
       period of lower than average data rates, the client may receive
       extra data to bring the average back to '-receiveavg' but the
       data rate will not exceed this parameter (default:
       9223372036854775807)

  -sendavg-<n>
       The average rate that data can be sent in kB/s (default:
       9223372036854775807)

  -sendburst-<n>
       The maximum rate that data can be sent in kB/s.  If there has been a
       period of lower than average data rates, the client may send
       extra data to bring the average back to '-receiveavg' but the
       data rate will not exceed this parameter (default:
       9223372036854775807)

  -use-thinblocks
       Enable thin blocks to speed up the relay of blocks (default: 1)

Block creation options:

  -blockminsize=<n>
       Set minimum block size in bytes (default: 0)

  -blockmaxsize=<n>
       Set maximum block size in bytes (default: 1000000)

  -blockprioritysize=<n>
       Set maximum size of high-priority/low-fee transactions in bytes
       (default: 50000)

  -blockversion=<n>
       Generated block version number.  Value must be an integer

RPC server options:

  -server
       Accept command line and JSON-RPC commands

  -rest
       Accept public REST requests (default: 0)

  -rpcbind=<addr>
       Bind to given address to listen for JSON-RPC connections. Use
       [host]:port notation for IPv6. This option can be specified
       multiple times (default: bind to all interfaces)

  -rpccookiefile=<loc>
       Location of the auth cookie (default: data dir)

  -rpcuser=<user>
       Username for JSON-RPC connections

  -rpcpassword=<pw>
       Password for JSON-RPC connections

  -rpcauth=<userpw>
       Username and hashed password for JSON-RPC connections. The field
       <userpw> comes in the format: <USERNAME>:<SALT>$<HASH>. A
       canonical python script is included in share/rpcuser. This option
       can be specified multiple times

  -rpcport=<port>
       Listen for JSON-RPC connections on <port> (default: 8332 or testnet:
       18332)

  -rpcallowip=<ip>
       Allow JSON-RPC connections from specified source. Valid for <ip> are a
       single IP (e.g. 1.2.3.4), a network/netmask (e.g.
       1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This
       option can be specified multiple times

  -rpcthreads=<n>
       Set the number of threads to service RPC calls (default: 4)

Bitcoin Unlimited configuration tweaks:

  -blockchain.checkScriptDays=<n>
       The number of days in the past we check scripts during initial block
       download.

  -mining.blockSize=<n>
       Maximum block size in bytes.  The maximum block size returned from
       'getblocktemplate' will be this value minus
       mining.coinbaseReserve.

  -mining.coinbaseReserve=<n>
       How much space to reserve for the coinbase transaction, in bytes

  -mining.comment=<str>
       Include text in a block's coinbase.

  -mining.excessiveSigopsPerMb=<n>
       Excessive effort per block, denoted in cost (# inputs * txsize) per MB

  -mining.forkBlockSize=<n>
       Set the maximum block generation size to this value at the time of the
       fork.

  -mining.forkExcessiveBlock=<n>
       Set the excessive block to this value at the time of the fork.

  -mining.forkTime=<n>
       Time in seconds since the epoch to initiate a hard fork as per BUIP055.

  -mining.unsafeGetBlockTemplate=<n>
       Allow getblocktemplate to succeed even if the chain tip is old or this
       node is not connected to other nodes

  -net.blockDownloadWindow=<n>
       How far ahead of our current height do we fetch? 0 means use algorithm.

  -net.blockRetryInterval=<n>
       How long to wait in microseconds before requesting a block from another
       source

  -net.excessiveAcceptDepth=<n>
       Excessive block chain acceptance depth in blocks

  -net.excessiveBlock=<n>
       Excessive block size in bytes

  -net.excessiveSigopsPerMb=<n>
       Excessive effort per block, denoted in cost (# inputs * txsize) per MB

  -net.excessiveTx=<n>
       Largest transaction size in bytes

  -net.maxBlocksInTransitPerPeer=<n>
       Number of blocks that can be requested at any given time from a single
       peer. 0 means use algorithm.

  -net.maxConnections=<n>
       Maximum number of connections

  -net.maxOutboundConnections=<n>
       Maximum number of outbound connections

  -net.minBitcoinCashNodes=<n>
       Minimum number of outbound BitcoinCash capable nodes to connect to

  -net.minXthinNodes=<n>
       Minimum number of outbound xthin capable nodes to connect to

  -net.onlyRelayForkSig=<n>
       Once the fork occurs, only accept transactions signed using the new
       signature scheme

  -net.subversionOverride=<str>
       If set, this field will override the normal subversion field.  This is
       useful if you need to hide your node.

  -net.txRetryInterval=<n>
       How long to wait in microseconds before requesting a transaction from
       another source

  -reindex.typicalBlockSize=<n>
       Set larger than the typical block size.  The block data file's RAM
       buffer will initally be 2x this size.

  -wallet.maxTxFee=<amt>
       Maximum total fees to use in a single wallet transaction or raw
       transaction; setting this too low may abort large transactions.

  -wallet.useNewSig=<n>
       Once the fork occurs, sign transactions using the new signature scheme
       so that they will only be valid on the fork.

